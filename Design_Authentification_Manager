class AuthenticationManager:

    def __init__(self, timeToLive: int):
        self.timeToLive=timeToLive
        self.expiry_time={}

    def generate(self, tokenId: str, currentTime: int) -> None:
        self.expiry_time[tokenId]=currentTime+self.timeToLive
        

    def renew(self, tokenId: str, currentTime: int) -> None:
        if tokenId in self.expiry_time and self.expiry_time[tokenId]>currentTime:
            self.expiry_time[tokenId]=currentTime+self.timeToLive

    def countUnexpiredTokens(self, currentTime: int) -> int:
        count=0
        for token in self.expiry_time:
            if self.expiry_time[token]>currentTime:
                count+=1
        return count


# Your AuthenticationManager object will be instantiated and called as such:
# obj = AuthenticationManager(timeToLive)
# obj.generate(tokenId,currentTime)
# obj.renew(tokenId,currentTime)
# param_3 = obj.countUnexpiredTokens(currentTime)
