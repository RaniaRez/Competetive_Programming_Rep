class Solution:
    def relativeSortArray(self, arr1: List[int], arr2: List[int]) -> List[int]:
        distinct=list(set(arr1)^set(arr2))
        distinct.sort()
        count_dict=Counter(arr1)
        res=[]
        for i in range(len(arr2)):
            val=arr2[i]
            if count_dict[val]>=1:
                for freq in range(count_dict[val]):
                    res.append(val)
                    

        if distinct:
            for val in distinct:
                for j in range(count_dict[val]):
                    res.append(val)
        
        return res
'''
Using a custom comparator
class Solution:
    def relativeSortArray(self, arr1: List[int], arr2: List[int]) -> List[int]:
        presentElements = {}
        lengthOfArr1 = len(arr1)

        for i in range(len(arr2)):
            presentElements[arr2[i]] = i

        def relativeSort(x):
            if x in presentElements:
                return presentElements[x]
            return x + lengthOfArr1

        arr1.sort(key = relativeSort)
        return arr1
'''
